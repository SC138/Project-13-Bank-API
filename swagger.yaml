swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /transactions:
    get:
      tags:
        - Transactions Module
      summary: List Transactions
      description: Retrieves a paginated list of transactions for the authenticated user with optional filtering by date and type. 
      # Récupère une liste paginée de transactions pour l'utilisateur authentifié avec un filtrage optionnel par date et type.
      security:
        - Bearer: []
      parameters:
        - in: query
          name: startDate
          type: string
          format: date
          required: false
          description: Start date to filter transactions, defaults to the first of the current month if not specified. 
          # La date de début pour filtrer les transactions, par défaut au premier du mois en cours si non spécifiée.
          default: "2024-02-01" # Date à générer dynamiquement dans l'application.
        - in: query
          name: endDate
          type: string
          format: date
          required: false
          description: End date to filter transactions. # Fin de la période pour filtrer les transactions.
        - in: query
          name: type
          type: string
          required: false
          description: Type of transactions to filter (withdrawal, deposit, etc.). # Type de transactions à filtrer (retrait, dépôt, etc.).
        - in: query
          name: page
          type: integer
          required: false
          default: 1
          description: Page number for pagination. # Numéro de page pour la pagination.
        - in: query
          name: limit
          type: integer
          required: false
          default: 30
          description: Number of transactions per page. # Nombre de transactions par page.
      responses:
        "200":
          description: A paginated array of transactions. # Retourne un tableau paginé de transactions.
          schema:
            type: array
            items:
              $ref: "#/definitions/Transaction"
        "401":
          description: Unauthorized access. # Accès non autorisé.

  /transactions/{transactionId}:
    parameters:
      - name: transactionId
        in: path
        required: true
        type: string
        # Paramètre 'transactionId' dans le chemin d'accès pour identifier la transaction spécifique.
    get:
      tags:
        - Transactions Module
      summary: Get Transaction
      description: Retrieves details of a specific transaction. # Récupère les détails d'une transaction spécifique.
      security:
        - Bearer: []
      responses:
        "200":
          description: Transaction details
          # Renvoie les détails de la transaction spécifiée.
          schema:
            $ref: "#/definitions/Transaction"
        "401":
          description: Unauthorized access
          # Accès non autorisé.
        "404":
          description: Transaction not found
          # Retourne un statut 404 si la transaction spécifiée n'est pas trouvée.
    put:
      tags:
        - Transactions Module
      summary: Update Transaction
      description: Updates categories and notes for a specific transaction. # Met à jour les catégories et les notes pour une transaction spécifique.
      security:
        - Bearer: []
      parameters:
        - name: transactionId
          in: path
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/TransactionUpdate"
            # Corps de la requête nécessaire pour mettre à jour la transaction, basé sur 'TransactionUpdate'.
      responses:
        "200":
          description: Transaction updated
          # Indique que la transaction a été mise à jour avec succès.
        "401":
          description: Unauthorized access
        "404":
          description: Transaction not found
          # Indique que la transaction à mettre à jour n'a pas été trouvée.
    delete:
      tags:
        - Transactions Module
      summary: Delete Transaction Details
      description: Deletes categories and notes associated with a specific transaction without deleting the transaction itself. # Supprime les catégories et les notes associées à une transaction spécifique sans supprimer la transaction elle-même.
      security:
        - Bearer: []
      parameters:
        - name: transactionId
          in: path
          required: true
          type: string
      responses:
        "200":
          description: Categories and notes associated with the transaction deleted successfully. 
          # Indique que les catégories et les notes associées à la transaction ont été supprimées avec succès.
        "401":
          description: Unauthorized access. 
          # Accès non autorisé.
        "404":
          description: Transaction not found or no associated details exist. 
          # Indique que la transaction n'a pas été trouvée ou qu'aucun détail associé n'existe.
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  Transaction:
    type: object
    properties:
      id:
        type: string
        # L'identifiant unique de la transaction, généralement une chaîne de caractères.
      type:
        type: string
        description: Type of transaction (withdrawal, deposit, etc.)
        # Spécifie le type de transaction, par exemple retrait, dépôt, paiement, etc.
      amount:
        type: number
        format: float
        # Le montant de la transaction. Le format 'float' permet des valeurs décimales.
      date:
        type: string
        format: date
        # La date de la transaction, stockée sous forme de chaîne de caractères au format date.
      category:
        type: string
        description: Category of the transaction
        # Catégorie de la transaction pour la classification (par exemple, repas, logement).
      notes:
        type: string
        description: Additional notes about the transaction
        # Champ facultatif pour ajouter des notes supplémentaires à la transaction.

  TransactionUpdate:
    type: object
    properties:
      type:
        type: string
        description: Type of transaction (withdrawal, deposit, etc.)
        # Permet de changer le type de la transaction lors de la mise à jour.
      amount:
        type: number
        format: float
        # Montant de la transaction pouvant être mis à jour. Utilise le format 'float'.
      date:
        type: string
        format: date
        # Date de la transaction pouvant être mise à jour.
      category:
        type: string
        description: Category of the transaction
        # Permet de mettre à jour la catégorie de la transaction.
      notes:
        type: string
        description: Additional notes about the transaction
        # Permet d'ajouter ou de mettre à jour des notes sur la transaction.

  Category:
    type: object
    properties:
      name:
        type: string
        description: Name of the category

  Note:
    type: object
    properties:
      content:
        type: string
        description: Content of the note
